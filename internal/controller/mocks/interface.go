// Code generated by MockGen. DO NOT EDIT.
// Source: internal/controller/interface.go

// Package mock_controller is a generated GoMock package.
package mocks

import (
	context "context"
	models "github.com/bogdanpashtet/plata-currency-rates/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetById mocks base method.
func (m *MockService) GetById(ctx context.Context, id string) (models.CurrencyRateWithDt, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", ctx, id)
	ret0, _ := ret[0].(models.CurrencyRateWithDt)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockServiceMockRecorder) GetById(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockService)(nil).GetById), ctx, id)
}

// GetLastRate mocks base method.
func (m *MockService) GetLastRate(ctx context.Context, toIso, fromIso string) (models.CurrencyRateLast, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastRate", ctx, toIso, fromIso)
	ret0, _ := ret[0].(models.CurrencyRateLast)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLastRate indicates an expected call of GetLastRate.
func (mr *MockServiceMockRecorder) GetLastRate(ctx, toIso, fromIso interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastRate", reflect.TypeOf((*MockService)(nil).GetLastRate), ctx, toIso, fromIso)
}

// GetRateFromProvider mocks base method.
func (m *MockService) GetRateFromProvider(ctx context.Context, toIso, fromIso string) (models.UpdateResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRateFromProvider", ctx, toIso, fromIso)
	ret0, _ := ret[0].(models.UpdateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRateFromProvider indicates an expected call of GetRateFromProvider.
func (mr *MockServiceMockRecorder) GetRateFromProvider(ctx, toIso, fromIso interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRateFromProvider", reflect.TypeOf((*MockService)(nil).GetRateFromProvider), ctx, toIso, fromIso)
}
